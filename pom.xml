<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com._4point.aem</groupId>
	<artifactId>formsfeeder</artifactId>
	<version>0.0.3-SNAPSHOT</version>
    <packaging>pom</packaging>
	<name>AEM Forms Feeder Project</name>
	<description>Project to create feeders for AEM Forms.</description>

	<!--
	In order to build this project, you just need to use the standard build procedure.  One of the two following options:
	install
	clean verify
	
	Strictly speaking, only the plugins project requires a "clean" as part of the build.  This is because the plugin that
	generates the plugin manifest entries fails to generate those entries unless the project has been previously cleaned.
	
	This build relies on the FluentFormsAPI libraries that reside in GitHub packages.  GitHub packages maven repository
	requires that the user authenticate (even for read access), so in order for this build to work, you need to have your
	personal GitHub credentials configured in your local settings.xml file (found in you $HOME/.m2 directory).
	Your settings.xml should look something like this:
	<?xml version="1.0"?>
	<settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0 https://maven.apache.org/xsd/settings-1.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/SETTINGS/1.0.0">
		<servers>
			<server>
				<id>github</id>
				<username>Your GitHub Username goes here</username>
				<password>Your Personal Access Token goes here</password>
			</server>
		</servers>
	</settings> 
	 -->
	<modules>
		<module>formsfeeder.core</module>
		<module>formsfeeder.pf4j-spring</module>
		<module>formsfeeder.server</module>
		<module>formsfeeder.plugins</module>
		<module>formsfeeder.client</module>
		<module>formsfeeder.client-cli</module>
	</modules>

	<properties>
		<encoding>UTF-8</encoding>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
		<project.resources.sourceEncoding>${encoding}</project.resources.sourceEncoding>
		<archetype.encoding>${encoding}</archetype.encoding>
		<maven.compiler.source>11</maven.compiler.source>
		<maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.release>11</maven.compiler.release>

        <pf4j.version>3.6.0</pf4j.version>
        <slf4j.version>1.7.33</slf4j.version>
        <mockito.version>4.4.0</mockito.version>
        <jupiter.version>5.8.2</jupiter.version>
        <jimfs.version>1.1</jimfs.version>
        <hamcrest.version>2.2</hamcrest.version>
        <jsoup.version>1.15.3</jsoup.version>
        <xml-unit-version>2.10.0</xml-unit-version>
        <xerces-version>2.12.2</xerces-version>
	</properties>

	<distributionManagement>
		<repository>
			<id>github</id>
			<name>4Point Solutions FormsFeeder Apache Maven Packages</name>
			<url>https://maven.pkg.github.com/4PointSolutions/FormsFeeder</url>
		</repository>
	</distributionManagement>
	
	<repositories>
		<repository>
			<id>central</id>
			<url>https://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>github</id>
			<url>https://maven.pkg.github.com/4PointSolutions/*</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M5</version>
			</plugin>
		</plugins>
	</build>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${jupiter.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>junit-addons</groupId>
				<artifactId>junit-addons</artifactId>
				<version>1.4</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>	<!-- Exclude this really old version of junit that junit-addons depends on -->
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
					<exclusion>	<!-- Exclude this really old version of xerces that junit-addons depends on -->
						<groupId>xerces</groupId>
						<artifactId>xercesImpl</artifactId>
					</exclusion>
					<exclusion>	<!-- Exclude this really old version of xerces that junit-addons depends on -->
						<groupId>xerces</groupId>
						<artifactId>xmlParserAPIs</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>	<!-- In-memory File System for writing/reading during unit testing. -->
				<groupId>com.google.jimfs</groupId>
				<artifactId>jimfs</artifactId>
				<version>${jimfs.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest</artifactId>
				<version>${hamcrest.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jsoup</groupId>
				<artifactId>jsoup</artifactId>
				<version>${jsoup.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-core</artifactId>
				<version>${xml-unit-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-matchers</artifactId>
				<version>${xml-unit-version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>	<!-- required by xml-unit -->
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>${xerces-version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
		
	</dependencyManagement>

</project>